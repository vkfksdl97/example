<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DepartmentMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="departmentMap" type="study.spring.simplespring.model.Department">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="deptno" column="deptno" />
		<result property="dname" column="dname" />
		<result property="loc" column="loc" />
	</resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem" parameterType="study.spring.simplespring.model.Department" resultMap="departmentMap">
		Select deptno, dname, loc From department Where deptno=#{deptno};
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList" parameterType="study.spring.simplespring.model.Department" resultMap="departmentMap">
		Select deptno, dname, loc From department
		
		<where>
			<if test="dname != null and dname != ''">
				dname Like concat('%', #{dname}, '%')
			</if>
			<if test="loc != null and loc != ''">
				Or loc Like concat('%', #{loc}, '%')
			</if>
		</where>
		
		Order By deptno Desc
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem" parameterType="study.spring.simplespring.model.Department" useGeneratedKeys="true"
		keyProperty="deptno">
		Insert Into department (dname, loc) Values (#{dname}, #{loc});
	</insert>
	
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem" parameterType="study.spring.simplespring.model.Department">
		Delete From department Where deptno=#{deptno};
	</delete>
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem" parameterType="study.spring.simplespring.model.Department">
		Update department Set dname=#{dname}, loc=#{loc}
		Where deptno=#{deptno};
	</update>
	
	<!-- 데이터 수 조회하기 -->
	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다.
		 count, max, min, sum, avg 함수를 사용한 경우 Mapper 에서는
		 resultMap이 아닌 resultType으로 반환한다.
	-->
	<select id="selectCountAll" parameterType="study.spring.simplespring.model.Department" resultType="int">
		Select Count(*) From department
		
		<where>
			<if test="dname != null and dname != ''">
				dname Like concat('%', #{dname}, '%')
			</if>
			<if test="loc != null and loc != ''">
				Or loc Like concat('%', #{loc}, '%')
			</if>
		</where>
	</select>
</mapper>